buildscript {
    repositories {
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.github.SurpSG:code-lines-counter-gradle-plugin:0.0.1'
    }
}

plugins {
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'maven'

    id 'jacoco'
    id "pl.droidsonroids.jacoco.testkit" version "1.0.5"
}

apply plugin: 'com.github.code-lines'

group 'com.github'
version '0.0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = 'com.github.code-lines'
            implementationClass = 'com.github.CodeLinesCounterPlugin'
        }
    }
}

sourceSets {
    functionalTest {
        kotlin.srcDir file('src/funcTests/kotlin')
        resources.srcDir file('src/funcTests/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath

    dependsOn += generateJacocoTestKitProperties
}
check.dependsOn functionalTest
generateJacocoTestKitProperties.destinationFile = file("$buildDir.absolutePath/jacoco/integration.exec")

jacocoTestReport {
    reports.html.enabled = true
    executionData.setFrom fileTree(buildDir).include("/jacoco/*.exec")
}

jacoco {
    toolVersion = '0.8.5'
}
